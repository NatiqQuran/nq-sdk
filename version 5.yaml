openapi: 3.0.3
info:
  title: Natiq API
  version: 1.0.0
  description: Natiq Quran API
paths:
  /auth/login/:
    post:
      operationId: auth_login_create
      description: Login with username and password. Returns Knox token.
      summary: Login with username and password to obtain a Knox token
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
            examples:
              LoginExample:
                value:
                  username: testuser
                  password: yourpassword
                summary: Login Example
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Login'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Login'
        required: true
      security:
      - knoxApiToken: []
      - {}
      responses:
        '200':
          description: Login successful, returns auth token.
        '400':
          description: Invalid credentials.
  /auth/logout/:
    post:
      operationId: auth_logout_create
      tags:
      - auth
      security:
      - knoxApiToken: []
      responses:
        '200':
          description: No response body
  /auth/logoutall/:
    post:
      operationId: auth_logoutall_create
      description: |-
        Log the user out of all sessions
        I.E. deletes all auth tokens for the user
      tags:
      - auth
      security:
      - knoxApiToken: []
      responses:
        '200':
          description: No response body
  /auth/register/:
    post:
      operationId: auth_register_create
      description: Register a new user with username, password, and email.
      summary: Register a new user account
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
            examples:
              RegisterExample:
                value:
                  username: newuser
                  password: yourpassword
                  password2: yourpassword
                  email: newuser@example.com
                  first_name: New
                  last_name: User
                summary: Register Example
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - knoxApiToken: []
      - {}
      responses:
        '201':
          description: User registered successfully, returns user data and token.
        '400':
          description: Validation error.
  /ayah-translations/:
    get:
      operationId: ayah_translations_list
      description: |-
        ViewSet for AyahTranslation objects (translations of individual Ayahs).
        Allows filtering by translation or ayah, and supports upsert on create.
      summary: List all Ayah Translations
      parameters:
      - in: query
        name: ayah_uuid
        schema:
          type: string
          format: uuid
        description: Ayah UUID
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: translation_uuid
        schema:
          type: string
          format: uuid
        description: Translation UUID
      tags:
      - ayah-translations
      security:
      - knoxApiToken: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAyahTranslationList'
          description: ''
    post:
      operationId: ayah_translations_create
      description: |-
        ViewSet for AyahTranslation objects (translations of individual Ayahs).
        Allows filtering by translation or ayah, and supports upsert on create.
      summary: Create a new Ayah Translation record
      parameters:
      - in: query
        name: ayah_uuid
        schema:
          type: string
          format: uuid
        description: Ayah UUID
      - in: query
        name: translation_uuid
        schema:
          type: string
          format: uuid
        description: Translation UUID
      tags:
      - ayah-translations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AyahTranslation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AyahTranslation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AyahTranslation'
        required: true
      security:
      - knoxApiToken: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AyahTranslation'
          description: ''
  /ayah-translations/{uuid}/:
    get:
      operationId: ayah_translations_retrieve
      description: |-
        ViewSet for AyahTranslation objects (translations of individual Ayahs).
        Allows filtering by translation or ayah, and supports upsert on create.
      summary: Retrieve a specific Ayah Translation by UUID
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - ayah-translations
      security:
      - knoxApiToken: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AyahTranslation'
          description: ''
    put:
      operationId: ayah_translations_update
      description: |-
        ViewSet for AyahTranslation objects (translations of individual Ayahs).
        Allows filtering by translation or ayah, and supports upsert on create.
      summary: Update an existing Ayah Translation record
      parameters:
      - in: query
        name: ayah_uuid
        schema:
          type: string
          format: uuid
        description: Ayah UUID
      - in: query
        name: translation_uuid
        schema:
          type: string
          format: uuid
        description: Translation UUID
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - ayah-translations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AyahTranslation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AyahTranslation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AyahTranslation'
        required: true
      security:
      - knoxApiToken: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AyahTranslation'
          description: ''
    patch:
      operationId: ayah_translations_partial_update
      description: |-
        ViewSet for AyahTranslation objects (translations of individual Ayahs).
        Allows filtering by translation or ayah, and supports upsert on create.
      summary: Partially update an Ayah Translation record
      parameters:
      - in: query
        name: ayah_uuid
        schema:
          type: string
          format: uuid
        description: Ayah UUID
      - in: query
        name: translation_uuid
        schema:
          type: string
          format: uuid
        description: Translation UUID
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - ayah-translations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAyahTranslation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAyahTranslation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAyahTranslation'
      security:
      - knoxApiToken: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AyahTranslation'
          description: ''
    delete:
      operationId: ayah_translations_destroy
      description: |-
        ViewSet for AyahTranslation objects (translations of individual Ayahs).
        Allows filtering by translation or ayah, and supports upsert on create.
      summary: Delete an Ayah Translation record
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - ayah-translations
      security:
      - knoxApiToken: []
      responses:
        '204':
          description: No response body
  /ayahs/:
    get:
      operationId: ayahs_list
      summary: List all Ayahs (Quran verses)
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: surah_uuid
        schema:
          type: string
          format: uuid
      tags:
      - ayahs
      security:
      - knoxApiToken: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAyahList'
          description: ''
    post:
      operationId: ayahs_create
      summary: Create a new Ayah record
      tags:
      - ayahs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AyahAdd'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AyahAdd'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AyahAdd'
        required: true
      security:
      - knoxApiToken: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AyahAdd'
          description: ''
  /ayahs/{uuid}/:
    get:
      operationId: ayahs_retrieve
      summary: Retrieve a specific Ayah by UUID
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - ayahs
      security:
      - knoxApiToken: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AyahSerializerView'
          description: ''
    put:
      operationId: ayahs_update
      summary: Update an existing Ayah record
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - ayahs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Ayah'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Ayah'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Ayah'
        required: true
      security:
      - knoxApiToken: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ayah'
          description: ''
    patch:
      operationId: ayahs_partial_update
      summary: Partially update an Ayah record
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - ayahs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAyah'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAyah'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAyah'
      security:
      - knoxApiToken: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ayah'
          description: ''
    delete:
      operationId: ayahs_destroy
      summary: Delete an Ayah record
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - ayahs
      security:
      - knoxApiToken: []
      responses:
        '204':
          description: No response body
  /groups/:
    get:
      operationId: groups_list
      summary: List all groups
      tags:
      - groups
      security:
      - knoxApiToken: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group'
          description: ''
    post:
      operationId: groups_create
      summary: Create a new group
      tags:
      - groups
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Group'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Group'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Group'
        required: true
      security:
      - knoxApiToken: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: ''
  /groups/{id}/:
    get:
      operationId: groups_retrieve
      summary: Retrieve a specific group by ID
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this group.
        required: true
      tags:
      - groups
      security:
      - knoxApiToken: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: ''
    put:
      operationId: groups_update
      summary: Update an existing group
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this group.
        required: true
      tags:
      - groups
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Group'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Group'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Group'
        required: true
      security:
      - knoxApiToken: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: ''
    patch:
      operationId: groups_partial_update
      summary: Partially update a group
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this group.
        required: true
      tags:
      - groups
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedGroup'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedGroup'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedGroup'
      security:
      - knoxApiToken: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: ''
    delete:
      operationId: groups_destroy
      summary: Delete a group
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this group.
        required: true
      tags:
      - groups
      security:
      - knoxApiToken: []
      responses:
        '204':
          description: No response body
  /mushafs/:
    get:
      operationId: mushafs_list
      description: |-
        ViewSet for managing Mushaf objects (Quranic manuscripts/editions).
        Supports listing, creating, updating, and retrieving Mushaf records.
        Enforces permissions and restricts editing of published Mushafs.
      summary: List all Mushafs (Quranic manuscripts/editions)
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - mushafs
      security:
      - knoxApiToken: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedMushafList'
          description: ''
    post:
      operationId: mushafs_create
      description: |-
        ViewSet for managing Mushaf objects (Quranic manuscripts/editions).
        Supports listing, creating, updating, and retrieving Mushaf records.
        Enforces permissions and restricts editing of published Mushafs.
      summary: Create a new Mushaf record
      tags:
      - mushafs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Mushaf'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Mushaf'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Mushaf'
        required: true
      security:
      - knoxApiToken: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Mushaf'
          description: ''
  /mushafs/{uuid}/:
    get:
      operationId: mushafs_retrieve
      description: |-
        ViewSet for managing Mushaf objects (Quranic manuscripts/editions).
        Supports listing, creating, updating, and retrieving Mushaf records.
        Enforces permissions and restricts editing of published Mushafs.
      summary: Retrieve a specific Mushaf by UUID
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - mushafs
      security:
      - knoxApiToken: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Mushaf'
          description: ''
    put:
      operationId: mushafs_update
      description: |-
        ViewSet for managing Mushaf objects (Quranic manuscripts/editions).
        Supports listing, creating, updating, and retrieving Mushaf records.
        Enforces permissions and restricts editing of published Mushafs.
      summary: Update an existing Mushaf record
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - mushafs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Mushaf'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Mushaf'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Mushaf'
        required: true
      security:
      - knoxApiToken: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Mushaf'
          description: ''
    patch:
      operationId: mushafs_partial_update
      description: |-
        ViewSet for managing Mushaf objects (Quranic manuscripts/editions).
        Supports listing, creating, updating, and retrieving Mushaf records.
        Enforces permissions and restricts editing of published Mushafs.
      summary: Partially update a Mushaf record
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - mushafs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedMushaf'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedMushaf'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedMushaf'
      security:
      - knoxApiToken: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Mushaf'
          description: ''
    delete:
      operationId: mushafs_destroy
      description: |-
        ViewSet for managing Mushaf objects (Quranic manuscripts/editions).
        Supports listing, creating, updating, and retrieving Mushaf records.
        Enforces permissions and restricts editing of published Mushafs.
      summary: Delete a Mushaf record
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - mushafs
      security:
      - knoxApiToken: []
      responses:
        '204':
          description: No response body
  /mushafs/import/:
    post:
      operationId: mushafs_import_create
      description: |-
        ViewSet for managing Mushaf objects (Quranic manuscripts/editions).
        Supports listing, creating, updating, and retrieving Mushaf records.
        Enforces permissions and restricts editing of published Mushafs.
      summary: Import a Mushaf from a JSON file upload
      tags:
      - mushafs
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                  description: JSON file containing the Mushaf data
              required:
              - file
      security:
      - knoxApiToken: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Mushaf'
          description: ''
  /notifications/:
    get:
      operationId: notifications_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - notifications
      security:
      - knoxApiToken: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedNotificationList'
          description: ''
    post:
      operationId: notifications_create
      tags:
      - notifications
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Notification'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Notification'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Notification'
        required: true
      security:
      - knoxApiToken: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notification'
          description: ''
  /notifications/{id}/:
    get:
      operationId: notifications_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this notification.
        required: true
      tags:
      - notifications
      security:
      - knoxApiToken: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notification'
          description: ''
    put:
      operationId: notifications_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this notification.
        required: true
      tags:
      - notifications
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Notification'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Notification'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Notification'
        required: true
      security:
      - knoxApiToken: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notification'
          description: ''
    patch:
      operationId: notifications_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this notification.
        required: true
      tags:
      - notifications
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedNotification'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedNotification'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedNotification'
      security:
      - knoxApiToken: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notification'
          description: ''
    delete:
      operationId: notifications_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this notification.
        required: true
      tags:
      - notifications
      security:
      - knoxApiToken: []
      responses:
        '204':
          description: No response body
  /notifications/me/:
    get:
      operationId: notifications_me_list
      description: Returns a paginated list of the current user's notifications. Marks
        notifications in the current page as 'got_notification' if not already marked.
      summary: Get the current user's notifications (paginated)
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - notifications
      security:
      - knoxApiToken: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedNotificationList'
          description: ''
  /notifications/opened/:
    get:
      operationId: notifications_opened_retrieve
      description: Marks a specific notification as 'opened_notification' using its
        uuid (provided as a query parameter).
      summary: Mark a notification as opened
      parameters:
      - in: query
        name: uuid
        schema:
          type: string
          format: uuid
        description: UUID of the notification to mark as opened.
        required: true
      tags:
      - notifications
      security:
      - knoxApiToken: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
  /notifications/viewed/:
    get:
      operationId: notifications_viewed_retrieve
      description: Marks all notifications with status 'got_notification' as 'viewed_notification'
        for the current user.
      summary: Mark notifications as viewed
      tags:
      - notifications
      security:
      - knoxApiToken: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
  /phrases/:
    get:
      operationId: phrases_list
      summary: List all phrases
      tags:
      - phrases
      security:
      - knoxApiToken: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Phrase'
          description: ''
    post:
      operationId: phrases_create
      summary: Create a new phrase
      tags:
      - phrases
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Phrase'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Phrase'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Phrase'
        required: true
      security:
      - knoxApiToken: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Phrase'
          description: ''
  /phrases/{uuid}/:
    get:
      operationId: phrases_retrieve
      summary: Retrieve a specific phrase by UUID
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - phrases
      security:
      - knoxApiToken: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Phrase'
          description: ''
    put:
      operationId: phrases_update
      summary: Update an existing phrase
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - phrases
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Phrase'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Phrase'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Phrase'
        required: true
      security:
      - knoxApiToken: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Phrase'
          description: ''
    patch:
      operationId: phrases_partial_update
      summary: Partially update a phrase
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - phrases
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPhrase'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPhrase'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPhrase'
      security:
      - knoxApiToken: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Phrase'
          description: ''
    delete:
      operationId: phrases_destroy
      summary: Delete a phrase
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - phrases
      security:
      - knoxApiToken: []
      responses:
        '204':
          description: No response body
  /phrases/modify/:
    post:
      operationId: phrases_modify_create
      description: Modify phrase translations for a given language. The 'language'
        query parameter is required.
      summary: Modify phrase translations
      parameters:
      - in: query
        name: language
        schema:
          type: string
        description: Language code for the translation (required).
        required: true
      tags:
      - phrases
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PhraseModify'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PhraseModify'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PhraseModify'
        required: true
      security:
      - knoxApiToken: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PhraseModify'
          description: ''
  /profile/{uuid}/:
    get:
      operationId: profile_retrieve
      summary: Retrieve the user's profile by uuid
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - profile
      security:
      - knoxApiToken: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
          description: ''
  /profile/me/:
    get:
      operationId: profile_me_retrieve
      description: 'GET: Retrieve the current user''s profile. POST: Update the current
        user''s profile information.'
      summary: Get or update the current user's profile
      tags:
      - profile
      security:
      - knoxApiToken: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
          description: ''
    post:
      operationId: profile_me_create
      description: 'GET: Retrieve the current user''s profile. POST: Update the current
        user''s profile information.'
      summary: Get or update the current user's profile
      tags:
      - profile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Profile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Profile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Profile'
        required: true
      security:
      - knoxApiToken: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
          description: ''
  /recitations/:
    get:
      operationId: recitations_list
      description: |-
        ViewSet for Recitation objects (audio recitations of the Quran).
        Supports filtering by Mushaf and reciter, and restricts editing of published recitations.
      summary: List all Recitations (audio recordings)
      parameters:
      - in: query
        name: mushaf_uuid
        schema:
          type: string
          format: uuid
        description: UUID of the Mushaf to filter Recitations by.
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: reciter_uuid
        schema:
          type: string
          format: uuid
        description: UUID of the Reciter to filter Recitations by.
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - recitations
      security:
      - knoxApiToken: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedRecitationList'
          description: ''
    post:
      operationId: recitations_create
      description: |-
        ViewSet for Recitation objects (audio recitations of the Quran).
        Supports filtering by Mushaf and reciter, and restricts editing of published recitations.
      summary: Create a new Recitation record
      tags:
      - recitations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Recitation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Recitation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Recitation'
        required: true
      security:
      - knoxApiToken: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Recitation'
          description: ''
  /recitations/{uuid}/:
    get:
      operationId: recitations_retrieve
      description: |-
        ViewSet for Recitation objects (audio recitations of the Quran).
        Supports filtering by Mushaf and reciter, and restricts editing of published recitations.
      summary: Retrieve a specific Recitation by UUID
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - recitations
      security:
      - knoxApiToken: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Recitation'
          description: ''
    put:
      operationId: recitations_update
      description: |-
        ViewSet for Recitation objects (audio recitations of the Quran).
        Supports filtering by Mushaf and reciter, and restricts editing of published recitations.
      summary: Update an existing Recitation record
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - recitations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Recitation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Recitation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Recitation'
        required: true
      security:
      - knoxApiToken: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Recitation'
          description: ''
    patch:
      operationId: recitations_partial_update
      description: |-
        ViewSet for Recitation objects (audio recitations of the Quran).
        Supports filtering by Mushaf and reciter, and restricts editing of published recitations.
      summary: Partially update a Recitation record
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - recitations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedRecitation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedRecitation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedRecitation'
      security:
      - knoxApiToken: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Recitation'
          description: ''
    delete:
      operationId: recitations_destroy
      description: |-
        ViewSet for Recitation objects (audio recitations of the Quran).
        Supports filtering by Mushaf and reciter, and restricts editing of published recitations.
      summary: Delete a Recitation record
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - recitations
      security:
      - knoxApiToken: []
      responses:
        '204':
          description: No response body
  /surahs/:
    get:
      operationId: surahs_list
      description: |-
        ViewSet for Surah (chapter) objects of the Quran.
        Allows filtering by Mushaf, searching by name, and auto-increments Surah number on creation.
      summary: List all Surahs (Quran chapters)
      parameters:
      - in: query
        name: mushaf
        schema:
          type: string
        description: Short name of the Mushaf to filter Surahs by.
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - surahs
      security:
      - knoxApiToken: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSurahList'
          description: ''
    post:
      operationId: surahs_create
      description: |-
        ViewSet for Surah (chapter) objects of the Quran.
        Allows filtering by Mushaf, searching by name, and auto-increments Surah number on creation.
      summary: Create a new Surah record
      tags:
      - surahs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Surah'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Surah'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Surah'
        required: true
      security:
      - knoxApiToken: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Surah'
          description: ''
  /surahs/{uuid}/:
    get:
      operationId: surahs_retrieve
      description: |-
        ViewSet for Surah (chapter) objects of the Quran.
        Allows filtering by Mushaf, searching by name, and auto-increments Surah number on creation.
      summary: Retrieve a specific Surah by UUID
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - surahs
      security:
      - knoxApiToken: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SurahDetail'
          description: ''
    put:
      operationId: surahs_update
      description: |-
        ViewSet for Surah (chapter) objects of the Quran.
        Allows filtering by Mushaf, searching by name, and auto-increments Surah number on creation.
      summary: Update an existing Surah record
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - surahs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Surah'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Surah'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Surah'
        required: true
      security:
      - knoxApiToken: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Surah'
          description: ''
    patch:
      operationId: surahs_partial_update
      description: |-
        ViewSet for Surah (chapter) objects of the Quran.
        Allows filtering by Mushaf, searching by name, and auto-increments Surah number on creation.
      summary: Partially update a Surah record
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - surahs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSurah'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSurah'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSurah'
      security:
      - knoxApiToken: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Surah'
          description: ''
    delete:
      operationId: surahs_destroy
      description: |-
        ViewSet for Surah (chapter) objects of the Quran.
        Allows filtering by Mushaf, searching by name, and auto-increments Surah number on creation.
      summary: Delete a Surah record
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - surahs
      security:
      - knoxApiToken: []
      responses:
        '204':
          description: No response body
  /translations/:
    get:
      operationId: translations_list
      description: |-
        ViewSet for managing Translation objects (Quran translations).
        Supports filtering by Mushaf and language, and restricts editing of published translations.
      summary: List all Quran Translations
      parameters:
      - in: query
        name: language
        schema:
          type: string
        description: Language code to filter Translations by.
      - in: query
        name: mushaf_uuid
        schema:
          type: string
          format: uuid
        description: UUID of the Mushaf to filter Translations by.
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - translations
      security:
      - knoxApiToken: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTranslationList'
          description: ''
    post:
      operationId: translations_create
      description: |-
        ViewSet for managing Translation objects (Quran translations).
        Supports filtering by Mushaf and language, and restricts editing of published translations.
      summary: Create a new Translation record
      tags:
      - translations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Translation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Translation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Translation'
        required: true
      security:
      - knoxApiToken: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Translation'
          description: ''
  /translations/{uuid}/:
    get:
      operationId: translations_retrieve
      description: |-
        ViewSet for managing Translation objects (Quran translations).
        Supports filtering by Mushaf and language, and restricts editing of published translations.
      summary: Retrieve a specific Translation by UUID
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - translations
      security:
      - knoxApiToken: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Translation'
          description: ''
    put:
      operationId: translations_update
      description: |-
        ViewSet for managing Translation objects (Quran translations).
        Supports filtering by Mushaf and language, and restricts editing of published translations.
      summary: Update an existing Translation record
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - translations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Translation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Translation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Translation'
        required: true
      security:
      - knoxApiToken: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Translation'
          description: ''
    patch:
      operationId: translations_partial_update
      description: |-
        ViewSet for managing Translation objects (Quran translations).
        Supports filtering by Mushaf and language, and restricts editing of published translations.
      summary: Partially update a Translation record
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - translations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTranslation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTranslation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTranslation'
      security:
      - knoxApiToken: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Translation'
          description: ''
    delete:
      operationId: translations_destroy
      description: |-
        ViewSet for managing Translation objects (Quran translations).
        Supports filtering by Mushaf and language, and restricts editing of published translations.
      summary: Delete a Translation record
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - translations
      security:
      - knoxApiToken: []
      responses:
        '204':
          description: No response body
  /translations/import/:
    post:
      operationId: translations_import_create
      description: |-
        Import a Translation from an uploaded JSON file.
        Expects a file field in the multipart/form-data.
      summary: Import a Translation from a JSON file upload
      tags:
      - translations
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                  description: JSON file containing the Translation data
              required:
              - file
      security:
      - knoxApiToken: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Translation'
          description: ''
  /upload/:
    post:
      operationId: upload_file
      description: Uploads a file to S3 with public access, categorizing it based
        on the
      summary: Upload a file to S3 with subject-based categorization
      parameters:
      - in: query
        name: subject
        schema:
          type: string
        description: 'Subject of the file to be uploaded. Allowed subjects: recitations'
      tags:
      - upload
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                  description: Max upload size depends on the subject
              required:
              - file
      security:
      - knoxApiToken: []
      responses:
        '200':
          description: No response body
  /upload/subjects/:
    get:
      operationId: upload_subjects_list
      description: Returns a list of allowed subjects and their file types for file
        uploads. max size format is in bytes
      summary: List allowed upload subjects
      tags:
      - upload
      security:
      - knoxApiToken: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UploadSubjectListResponse'
              examples:
                AllowedUploadSubjects:
                  value:
                  - subject: recitations
                    type: mp3
                    description: Audio recitations of Quran
                    max_size: 26214400
                  summary: Allowed upload subjects
                  description: Example response showing allowed subjects and their
                    file types.
          description: ''
  /users/:
    get:
      operationId: users_list
      summary: List all users
      tags:
      - users
      security:
      - knoxApiToken: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
          description: ''
    post:
      operationId: users_create
      summary: Create a new user
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - knoxApiToken: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /users/{uuid}/:
    get:
      operationId: users_retrieve
      summary: Retrieve a specific user by UUID
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - users
      security:
      - knoxApiToken: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    put:
      operationId: users_update
      summary: Update an existing user
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - knoxApiToken: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    patch:
      operationId: users_partial_update
      summary: Partially update a user
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUser'
      security:
      - knoxApiToken: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    delete:
      operationId: users_destroy
      summary: Delete a user
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - users
      security:
      - knoxApiToken: []
      responses:
        '204':
          description: No response body
  /words/:
    get:
      operationId: words_list
      description: |-
        ViewSet for Word objects (words within Ayahs).
        Allows filtering by Ayah and searching by word text.
      summary: List all Words in Ayahs
      parameters:
      - in: query
        name: ayah_uuid
        schema:
          type: string
          format: uuid
        description: UUID of the Ayah to filter Words by.
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - words
      security:
      - knoxApiToken: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedWordList'
          description: ''
    post:
      operationId: words_create
      description: |-
        ViewSet for Word objects (words within Ayahs).
        Allows filtering by Ayah and searching by word text.
      summary: Create a new Word record
      parameters:
      - in: query
        name: ayah_uuid
        schema:
          type: string
          format: uuid
        description: UUID of the Ayah to associate the new Word with (if ayah_id is
          not provided in the body).
      tags:
      - words
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Word'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Word'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Word'
        required: true
      security:
      - knoxApiToken: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Word'
          description: ''
  /words/{uuid}/:
    get:
      operationId: words_retrieve
      description: |-
        ViewSet for Word objects (words within Ayahs).
        Allows filtering by Ayah and searching by word text.
      summary: Retrieve a specific Word by UUID
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - words
      security:
      - knoxApiToken: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Word'
          description: ''
    put:
      operationId: words_update
      description: |-
        ViewSet for Word objects (words within Ayahs).
        Allows filtering by Ayah and searching by word text.
      summary: Update an existing Word record
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - words
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Word'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Word'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Word'
        required: true
      security:
      - knoxApiToken: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Word'
          description: ''
    patch:
      operationId: words_partial_update
      description: |-
        ViewSet for Word objects (words within Ayahs).
        Allows filtering by Ayah and searching by word text.
      summary: Partially update a Word record
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - words
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedWord'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedWord'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedWord'
      security:
      - knoxApiToken: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Word'
          description: ''
    delete:
      operationId: words_destroy
      description: |-
        ViewSet for Word objects (words within Ayahs).
        Allows filtering by Ayah and searching by word text.
      summary: Delete a Word record
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - words
      security:
      - knoxApiToken: []
      responses:
        '204':
          description: No response body
components:
  schemas:
    Ayah:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        number:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        sajdah:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/SajdahEnum'
          - $ref: '#/components/schemas/NullEnum'
        text:
          type: string
          readOnly: true
        breakers:
          type: string
          readOnly: true
        bismillah:
          type: string
          readOnly: true
        surah:
          type: string
          readOnly: true
      required:
      - bismillah
      - breakers
      - number
      - surah
      - text
      - uuid
    AyahAdd:
      type: object
      properties:
        surah_uuid:
          type: string
          format: uuid
        text:
          type: string
        is_bismillah:
          type: boolean
          default: false
        bismillah_text:
          type: string
          nullable: true
        sajdah:
          type: string
          nullable: true
      required:
      - surah_uuid
      - text
    AyahInSurah:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        number:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        sajdah:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/SajdahEnum'
          - $ref: '#/components/schemas/NullEnum'
        is_bismillah:
          type: boolean
        bismillah_text:
          type: string
          nullable: true
        text:
          type: string
          readOnly: true
      required:
      - number
      - text
      - uuid
    AyahSerializerView:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        number:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        sajdah:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/SajdahEnum'
          - $ref: '#/components/schemas/NullEnum'
        text:
          type: string
          readOnly: true
        breakers:
          type: string
          readOnly: true
        bismillah:
          type: string
          readOnly: true
        surah:
          allOf:
          - $ref: '#/components/schemas/SurahInAyah'
          readOnly: true
        mushaf:
          type: string
          readOnly: true
        words:
          type: array
          items:
            $ref: '#/components/schemas/Word'
          readOnly: true
      required:
      - bismillah
      - breakers
      - mushaf
      - number
      - surah
      - text
      - uuid
      - words
    AyahTranslation:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        translation_uuid:
          type: string
          format: uuid
          writeOnly: true
        ayah_uuid:
          type: string
          format: uuid
          writeOnly: true
        text:
          type: string
        bismillah:
          type: string
          nullable: true
      required:
      - ayah_uuid
      - text
      - translation_uuid
      - uuid
    BlankEnum:
      enum:
      - ''
    Group:
      type: object
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        name:
          type: string
          maxLength: 150
      required:
      - name
      - url
    Login:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
      required:
      - password
      - username
    MessageTypeEnum:
      enum:
      - success
      - failed
      - warning
      - pending
      type: string
      description: |-
        * `success` - Success
        * `failed` - Failed
        * `warning` - Warning
        * `pending` - Pending
    Mushaf:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        short_name:
          type: string
          maxLength: 100
        name:
          type: string
        source:
          type: string
        status:
          $ref: '#/components/schemas/Status115Enum'
      required:
      - name
      - short_name
      - uuid
    Notification:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        resource_controller:
          type: string
          maxLength: 128
        resource_action:
          type: string
          maxLength: 128
        resource_uuid:
          type: string
          format: uuid
          nullable: true
        status:
          $ref: '#/components/schemas/NotificationStatusEnum'
        description:
          type: string
          nullable: true
          maxLength: 255
        message:
          type: string
          nullable: true
        message_type:
          $ref: '#/components/schemas/MessageTypeEnum'
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - resource_action
      - resource_controller
      - uuid
    NotificationStatusEnum:
      enum:
      - nothing_happened
      - got_notification
      - viewed_notification
      - opened_notification
      type: string
      description: |-
        * `nothing_happened` - Nothing Happened
        * `got_notification` - User Got Notification
        * `viewed_notification` - User Viewed Notification
        * `opened_notification` - User Opened Notification
    NullEnum:
      enum:
      - null
    PaginatedAyahList:
      type: array
      items:
        $ref: '#/components/schemas/Ayah'
    PaginatedAyahTranslationList:
      type: array
      items:
        $ref: '#/components/schemas/AyahTranslation'
    PaginatedMushafList:
      type: array
      items:
        $ref: '#/components/schemas/Mushaf'
    PaginatedNotificationList:
      type: array
      items:
        $ref: '#/components/schemas/Notification'
    PaginatedRecitationList:
      type: array
      items:
        $ref: '#/components/schemas/Recitation'
    PaginatedSurahList:
      type: array
      items:
        $ref: '#/components/schemas/Surah'
    PaginatedTranslationList:
      type: array
      items:
        $ref: '#/components/schemas/Translation'
    PaginatedWordList:
      type: array
      items:
        $ref: '#/components/schemas/Word'
    PatchedAyah:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        number:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        sajdah:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/SajdahEnum'
          - $ref: '#/components/schemas/NullEnum'
        text:
          type: string
          readOnly: true
        breakers:
          type: string
          readOnly: true
        bismillah:
          type: string
          readOnly: true
        surah:
          type: string
          readOnly: true
    PatchedAyahTranslation:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        translation_uuid:
          type: string
          format: uuid
          writeOnly: true
        ayah_uuid:
          type: string
          format: uuid
          writeOnly: true
        text:
          type: string
        bismillah:
          type: string
          nullable: true
    PatchedGroup:
      type: object
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        name:
          type: string
          maxLength: 150
    PatchedMushaf:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        short_name:
          type: string
          maxLength: 100
        name:
          type: string
        source:
          type: string
        status:
          $ref: '#/components/schemas/Status115Enum'
    PatchedNotification:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        resource_controller:
          type: string
          maxLength: 128
        resource_action:
          type: string
          maxLength: 128
        resource_uuid:
          type: string
          format: uuid
          nullable: true
        status:
          $ref: '#/components/schemas/NotificationStatusEnum'
        description:
          type: string
          nullable: true
          maxLength: 255
        message:
          type: string
          nullable: true
        message_type:
          $ref: '#/components/schemas/MessageTypeEnum'
        created_at:
          type: string
          format: date-time
          readOnly: true
    PatchedPhrase:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        phrase:
          type: string
    PatchedRecitation:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        mushaf_uuid:
          type: string
          format: uuid
          writeOnly: true
        get_mushaf_uuid:
          type: string
          readOnly: true
        surah_uuid:
          type: string
          format: uuid
          writeOnly: true
        get_surah_uuid:
          type: string
          readOnly: true
        status:
          $ref: '#/components/schemas/Status115Enum'
        reciter_account_uuid:
          type: string
          readOnly: true
        recitation_date:
          type: string
          format: date
        recitation_location:
          type: string
        duration:
          type: string
        file:
          type: object
          additionalProperties: {}
          writeOnly: true
        recitation_type:
          type: string
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        words_timestamps:
          type: array
          items:
            type: object
            additionalProperties:
              type: string
          writeOnly: true
        ayahs_timestamps:
          type: string
          readOnly: true
    PatchedSurah:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        mushaf:
          allOf:
          - $ref: '#/components/schemas/Mushaf'
          readOnly: true
        mushaf_uuid:
          type: string
          format: uuid
          writeOnly: true
        name:
          type: string
          writeOnly: true
        names:
          type: string
          readOnly: true
        number:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        period:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/PeriodEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        search_terms:
          type: string
          nullable: true
        number_of_ayahs:
          type: string
          readOnly: true
    PatchedTranslation:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        mushaf_uuid:
          type: string
          readOnly: true
        translator_uuid:
          type: string
          readOnly: true
        language:
          type: string
          maxLength: 5
        release_date:
          type: string
          format: date
          nullable: true
        source:
          type: string
          nullable: true
          maxLength: 300
        status:
          $ref: '#/components/schemas/Status115Enum'
    PatchedUser:
      type: object
      properties:
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        password:
          type: string
          writeOnly: true
        password2:
          type: string
          writeOnly: true
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
    PatchedWord:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        ayah_uuid:
          type: string
          format: uuid
          writeOnly: true
        text:
          type: string
    PeriodEnum:
      enum:
      - makki
      - madani
      type: string
      description: |-
        * `makki` - Makki
        * `madani` - Madani
    Phrase:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        phrase:
          type: string
      required:
      - phrase
      - uuid
    PhraseModify:
      type: object
      properties:
        phrases:
          type: object
          additionalProperties:
            type: string
      required:
      - phrases
    Profile:
      type: object
      properties:
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
      required:
      - username
    Recitation:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        mushaf_uuid:
          type: string
          format: uuid
          writeOnly: true
        get_mushaf_uuid:
          type: string
          readOnly: true
        surah_uuid:
          type: string
          format: uuid
          writeOnly: true
        get_surah_uuid:
          type: string
          readOnly: true
        status:
          $ref: '#/components/schemas/Status115Enum'
        reciter_account_uuid:
          type: string
          readOnly: true
        recitation_date:
          type: string
          format: date
        recitation_location:
          type: string
        duration:
          type: string
        file:
          type: object
          additionalProperties: {}
          writeOnly: true
        recitation_type:
          type: string
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        words_timestamps:
          type: array
          items:
            type: object
            additionalProperties:
              type: string
          writeOnly: true
        ayahs_timestamps:
          type: string
          readOnly: true
      required:
      - ayahs_timestamps
      - created_at
      - duration
      - file
      - get_mushaf_uuid
      - get_surah_uuid
      - mushaf_uuid
      - recitation_date
      - recitation_location
      - recitation_type
      - reciter_account_uuid
      - surah_uuid
      - updated_at
      - uuid
      - words_timestamps
    SajdahEnum:
      enum:
      - none
      type: string
      description: '* `none` - None'
    Status115Enum:
      enum:
      - draft
      - pending_review
      - published
      type: string
      description: |-
        * `draft` - Draft
        * `pending_review` - Pending review
        * `published` - Published
    Surah:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        mushaf:
          allOf:
          - $ref: '#/components/schemas/Mushaf'
          readOnly: true
        mushaf_uuid:
          type: string
          format: uuid
          writeOnly: true
        name:
          type: string
          writeOnly: true
        names:
          type: string
          readOnly: true
        number:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        period:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/PeriodEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        search_terms:
          type: string
          nullable: true
        number_of_ayahs:
          type: string
          readOnly: true
      required:
      - mushaf
      - mushaf_uuid
      - name
      - names
      - number
      - number_of_ayahs
      - uuid
    SurahDetail:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        mushaf:
          allOf:
          - $ref: '#/components/schemas/Mushaf'
          readOnly: true
        mushaf_uuid:
          type: string
          format: uuid
          writeOnly: true
        name:
          type: string
          writeOnly: true
        names:
          type: string
          readOnly: true
        number:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        period:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/PeriodEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        search_terms:
          type: string
          nullable: true
        number_of_ayahs:
          type: string
          readOnly: true
        ayahs:
          type: array
          items:
            $ref: '#/components/schemas/AyahInSurah'
          readOnly: true
      required:
      - ayahs
      - mushaf
      - mushaf_uuid
      - name
      - names
      - number
      - number_of_ayahs
      - uuid
    SurahInAyah:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        names:
          type: string
          readOnly: true
      required:
      - names
      - uuid
    Translation:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        mushaf_uuid:
          type: string
          readOnly: true
        translator_uuid:
          type: string
          readOnly: true
        language:
          type: string
          maxLength: 5
        release_date:
          type: string
          format: date
          nullable: true
        source:
          type: string
          nullable: true
          maxLength: 300
        status:
          $ref: '#/components/schemas/Status115Enum'
      required:
      - language
      - mushaf_uuid
      - translator_uuid
      - uuid
    UploadSubjectListResponse:
      type: object
      properties:
        subject:
          type: string
        type:
          type: string
        description:
          type: string
        max_size:
          type: integer
      required:
      - description
      - max_size
      - subject
      - type
    User:
      type: object
      properties:
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        password:
          type: string
          writeOnly: true
        password2:
          type: string
          writeOnly: true
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
      required:
      - email
      - password
      - password2
      - username
    Word:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        ayah_uuid:
          type: string
          format: uuid
          writeOnly: true
        text:
          type: string
      required:
      - ayah_uuid
      - text
      - uuid
  securitySchemes:
    knoxApiToken:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "Token"
