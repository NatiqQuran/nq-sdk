/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/auth/login/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["auth_login_create"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/auth/logout/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["auth_logout_create"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/auth/logoutall/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** @description Log the user out of all sessions
         *     I.E. deletes all auth tokens for the user */
        post: operations["auth_logoutall_create"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/auth/register/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** @description Register a new user with username, password, and email.
         *     Returns user data and Knox token upon successful registration. */
        post: operations["auth_register_create"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/ayah-translations/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["ayah_translations_list"];
        put?: never;
        post: operations["ayah_translations_create"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/ayah-translations/{id}/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["ayah_translations_retrieve"];
        put: operations["ayah_translations_update"];
        post?: never;
        delete: operations["ayah_translations_destroy"];
        options?: never;
        head?: never;
        patch: operations["ayah_translations_partial_update"];
        trace?: never;
    };
    "/ayahs/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["ayahs_list"];
        put?: never;
        post: operations["ayahs_create"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/ayahs/{id}/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["ayahs_retrieve"];
        put: operations["ayahs_update"];
        post?: never;
        delete: operations["ayahs_destroy"];
        options?: never;
        head?: never;
        patch: operations["ayahs_partial_update"];
        trace?: never;
    };
    "/groups/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description API endpoint that allows groups to be viewed or edited. */
        get: operations["groups_list"];
        put?: never;
        /** @description API endpoint that allows groups to be viewed or edited. */
        post: operations["groups_create"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/groups/{id}/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description API endpoint that allows groups to be viewed or edited. */
        get: operations["groups_retrieve"];
        /** @description API endpoint that allows groups to be viewed or edited. */
        put: operations["groups_update"];
        post?: never;
        /** @description API endpoint that allows groups to be viewed or edited. */
        delete: operations["groups_destroy"];
        options?: never;
        head?: never;
        /** @description API endpoint that allows groups to be viewed or edited. */
        patch: operations["groups_partial_update"];
        trace?: never;
    };
    "/mushafs/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["mushafs_list"];
        put?: never;
        post: operations["mushafs_create"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/mushafs/{id}/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["mushafs_retrieve"];
        put: operations["mushafs_update"];
        post?: never;
        delete: operations["mushafs_destroy"];
        options?: never;
        head?: never;
        patch: operations["mushafs_partial_update"];
        trace?: never;
    };
    "/phrases/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["phrases_list"];
        put?: never;
        post: operations["phrases_create"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/phrases/{id}/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["phrases_retrieve"];
        put: operations["phrases_update"];
        post?: never;
        delete: operations["phrases_destroy"];
        options?: never;
        head?: never;
        patch: operations["phrases_partial_update"];
        trace?: never;
    };
    "/surahs/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["surahs_list"];
        put?: never;
        post: operations["surahs_create"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/surahs/{id}/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["surahs_retrieve"];
        put: operations["surahs_update"];
        post?: never;
        delete: operations["surahs_destroy"];
        options?: never;
        head?: never;
        patch: operations["surahs_partial_update"];
        trace?: never;
    };
    "/translations/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["translations_list"];
        put?: never;
        post: operations["translations_create"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/translations/{id}/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["translations_retrieve"];
        put: operations["translations_update"];
        post?: never;
        delete: operations["translations_destroy"];
        options?: never;
        head?: never;
        patch: operations["translations_partial_update"];
        trace?: never;
    };
    "/users/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description API endpoint that allows users to be viewed or edited. */
        get: operations["users_list"];
        put?: never;
        /** @description API endpoint that allows users to be viewed or edited. */
        post: operations["users_create"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/users/{id}/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description API endpoint that allows users to be viewed or edited. */
        get: operations["users_retrieve"];
        /** @description API endpoint that allows users to be viewed or edited. */
        put: operations["users_update"];
        post?: never;
        /** @description API endpoint that allows users to be viewed or edited. */
        delete: operations["users_destroy"];
        options?: never;
        head?: never;
        /** @description API endpoint that allows users to be viewed or edited. */
        patch: operations["users_partial_update"];
        trace?: never;
    };
    "/words/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["words_list"];
        put?: never;
        post: operations["words_create"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/words/{id}/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["words_retrieve"];
        put: operations["words_update"];
        post?: never;
        delete: operations["words_destroy"];
        options?: never;
        head?: never;
        patch: operations["words_partial_update"];
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        Ayah: {
            readonly id: number;
            number: number;
            sajdah?: (components["schemas"]["SajdahEnum"] | components["schemas"]["NullEnum"]) | null;
            readonly text: string;
            readonly breakers: string;
            readonly bismillah: string;
            readonly surah: string;
        };
        AyahAdd: {
            surah_id: number;
            text: string;
            /** @default false */
            is_bismillah: boolean;
            bismillah_text?: string | null;
            sajdah?: string | null;
        };
        AyahSerializerView: {
            readonly id: number;
            number: number;
            sajdah?: (components["schemas"]["SajdahEnum"] | components["schemas"]["NullEnum"]) | null;
            readonly text: string;
            readonly breakers: string;
            readonly bismillah: string;
            readonly surah: components["schemas"]["SurahInAyah"];
            readonly mushaf: string;
            readonly words: components["schemas"]["Word"][];
        };
        AyahTranslation: {
            readonly id: number;
            readonly translation_id: number;
            readonly ayah_id: number;
            text: string;
            bismillah?: string | null;
        };
        /** @enum {unknown} */
        BlankEnum: "";
        Group: {
            /** Format: uri */
            readonly url: string;
            name: string;
        };
        Mushaf: {
            readonly id: number;
            short_name?: string;
            name: string;
            source: string;
        };
        /** @enum {unknown} */
        NullEnum: null;
        PatchedAyah: {
            readonly id?: number;
            number?: number;
            sajdah?: (components["schemas"]["SajdahEnum"] | components["schemas"]["NullEnum"]) | null;
            readonly text?: string;
            readonly breakers?: string;
            readonly bismillah?: string;
            readonly surah?: string;
        };
        PatchedAyahTranslation: {
            readonly id?: number;
            readonly translation_id?: number;
            readonly ayah_id?: number;
            text?: string;
            bismillah?: string | null;
        };
        PatchedGroup: {
            /** Format: uri */
            readonly url?: string;
            name?: string;
        };
        PatchedMushaf: {
            readonly id?: number;
            short_name?: string;
            name?: string;
            source?: string;
        };
        PatchedPhrase: {
            readonly id?: number;
            phrase?: string;
        };
        PatchedSurah: {
            readonly id?: number;
            readonly mushaf?: components["schemas"]["Mushaf"];
            readonly names?: string;
            number?: number;
            period?: (components["schemas"]["PeriodEnum"] | components["schemas"]["BlankEnum"] | components["schemas"]["NullEnum"]) | null;
            search_terms?: string | null;
            readonly number_of_ayahs?: string;
        };
        PatchedTranslation: {
            readonly id?: number;
            mushaf?: number;
            translator?: number;
            language?: string;
            /** Format: date */
            release_date?: string | null;
            source?: string | null;
            approved?: boolean;
        };
        PatchedUser: {
            /** @description Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only. */
            username?: string;
            password?: string;
            password2?: string;
            /**
             * Email address
             * Format: email
             */
            email?: string;
            first_name?: string;
            last_name?: string;
        };
        PatchedWord: {
            readonly id?: number;
            readonly ayah_id?: number;
            text?: string;
        };
        /**
         * @description * `makki` - Makki
         *     * `madani` - Madani
         * @enum {string}
         */
        PeriodEnum: "makki" | "madani";
        Phrase: {
            readonly id: number;
            phrase: string;
        };
        /**
         * @description * `none` - None
         * @enum {string}
         */
        SajdahEnum: "none";
        Surah: {
            readonly id: number;
            readonly mushaf: components["schemas"]["Mushaf"];
            readonly names: string;
            number: number;
            period?: (components["schemas"]["PeriodEnum"] | components["schemas"]["BlankEnum"] | components["schemas"]["NullEnum"]) | null;
            search_terms?: string | null;
            readonly number_of_ayahs: string;
        };
        SurahDetail: {
            readonly id: number;
            readonly mushaf: components["schemas"]["Mushaf"];
            readonly names: string;
            number: number;
            period?: (components["schemas"]["PeriodEnum"] | components["schemas"]["BlankEnum"] | components["schemas"]["NullEnum"]) | null;
            search_terms?: string | null;
            readonly number_of_ayahs: string;
            readonly ayahs: components["schemas"]["Ayah"][];
        };
        SurahInAyah: {
            readonly id: number;
            readonly names: string;
        };
        Translation: {
            readonly id: number;
            mushaf: number;
            translator: number;
            language: string;
            /** Format: date */
            release_date?: string | null;
            source?: string | null;
            approved?: boolean;
        };
        User: {
            /** @description Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only. */
            username: string;
            password: string;
            password2: string;
            /**
             * Email address
             * Format: email
             */
            email: string;
            first_name?: string;
            last_name?: string;
        };
        Word: {
            readonly id: number;
            readonly ayah_id: number;
            text: string;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    auth_login_create: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description No response body */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    auth_logout_create: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description No response body */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    auth_logoutall_create: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description No response body */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    auth_register_create: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["User"];
                "application/x-www-form-urlencoded": components["schemas"]["User"];
                "multipart/form-data": components["schemas"]["User"];
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["User"];
                };
            };
        };
    };
    ayah_translations_list: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["AyahTranslation"][];
                };
            };
        };
    };
    ayah_translations_create: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["AyahTranslation"];
                "application/x-www-form-urlencoded": components["schemas"]["AyahTranslation"];
                "multipart/form-data": components["schemas"]["AyahTranslation"];
            };
        };
        responses: {
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["AyahTranslation"];
                };
            };
        };
    };
    ayah_translations_retrieve: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description A unique integer value identifying this ayah translation. */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["AyahTranslation"];
                };
            };
        };
    };
    ayah_translations_update: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description A unique integer value identifying this ayah translation. */
                id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["AyahTranslation"];
                "application/x-www-form-urlencoded": components["schemas"]["AyahTranslation"];
                "multipart/form-data": components["schemas"]["AyahTranslation"];
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["AyahTranslation"];
                };
            };
        };
    };
    ayah_translations_destroy: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description A unique integer value identifying this ayah translation. */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description No response body */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    ayah_translations_partial_update: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description A unique integer value identifying this ayah translation. */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": components["schemas"]["PatchedAyahTranslation"];
                "application/x-www-form-urlencoded": components["schemas"]["PatchedAyahTranslation"];
                "multipart/form-data": components["schemas"]["PatchedAyahTranslation"];
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["AyahTranslation"];
                };
            };
        };
    };
    ayahs_list: {
        parameters: {
            query?: {
                surah_id?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Ayah"][];
                };
            };
        };
    };
    ayahs_create: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["AyahAdd"];
                "application/x-www-form-urlencoded": components["schemas"]["AyahAdd"];
                "multipart/form-data": components["schemas"]["AyahAdd"];
            };
        };
        responses: {
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["AyahAdd"];
                };
            };
        };
    };
    ayahs_retrieve: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description A unique integer value identifying this ayah. */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["AyahSerializerView"];
                };
            };
        };
    };
    ayahs_update: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description A unique integer value identifying this ayah. */
                id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Ayah"];
                "application/x-www-form-urlencoded": components["schemas"]["Ayah"];
                "multipart/form-data": components["schemas"]["Ayah"];
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Ayah"];
                };
            };
        };
    };
    ayahs_destroy: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description A unique integer value identifying this ayah. */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description No response body */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    ayahs_partial_update: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description A unique integer value identifying this ayah. */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": components["schemas"]["PatchedAyah"];
                "application/x-www-form-urlencoded": components["schemas"]["PatchedAyah"];
                "multipart/form-data": components["schemas"]["PatchedAyah"];
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Ayah"];
                };
            };
        };
    };
    groups_list: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Group"][];
                };
            };
        };
    };
    groups_create: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Group"];
                "application/x-www-form-urlencoded": components["schemas"]["Group"];
                "multipart/form-data": components["schemas"]["Group"];
            };
        };
        responses: {
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Group"];
                };
            };
        };
    };
    groups_retrieve: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description A unique integer value identifying this group. */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Group"];
                };
            };
        };
    };
    groups_update: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description A unique integer value identifying this group. */
                id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Group"];
                "application/x-www-form-urlencoded": components["schemas"]["Group"];
                "multipart/form-data": components["schemas"]["Group"];
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Group"];
                };
            };
        };
    };
    groups_destroy: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description A unique integer value identifying this group. */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description No response body */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    groups_partial_update: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description A unique integer value identifying this group. */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": components["schemas"]["PatchedGroup"];
                "application/x-www-form-urlencoded": components["schemas"]["PatchedGroup"];
                "multipart/form-data": components["schemas"]["PatchedGroup"];
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Group"];
                };
            };
        };
    };
    mushafs_list: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Mushaf"][];
                };
            };
        };
    };
    mushafs_create: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Mushaf"];
                "application/x-www-form-urlencoded": components["schemas"]["Mushaf"];
                "multipart/form-data": components["schemas"]["Mushaf"];
            };
        };
        responses: {
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Mushaf"];
                };
            };
        };
    };
    mushafs_retrieve: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description A unique integer value identifying this mushaf. */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Mushaf"];
                };
            };
        };
    };
    mushafs_update: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description A unique integer value identifying this mushaf. */
                id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Mushaf"];
                "application/x-www-form-urlencoded": components["schemas"]["Mushaf"];
                "multipart/form-data": components["schemas"]["Mushaf"];
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Mushaf"];
                };
            };
        };
    };
    mushafs_destroy: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description A unique integer value identifying this mushaf. */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description No response body */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    mushafs_partial_update: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description A unique integer value identifying this mushaf. */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": components["schemas"]["PatchedMushaf"];
                "application/x-www-form-urlencoded": components["schemas"]["PatchedMushaf"];
                "multipart/form-data": components["schemas"]["PatchedMushaf"];
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Mushaf"];
                };
            };
        };
    };
    phrases_list: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Phrase"][];
                };
            };
        };
    };
    phrases_create: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Phrase"];
                "application/x-www-form-urlencoded": components["schemas"]["Phrase"];
                "multipart/form-data": components["schemas"]["Phrase"];
            };
        };
        responses: {
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Phrase"];
                };
            };
        };
    };
    phrases_retrieve: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description A unique integer value identifying this phrase. */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Phrase"];
                };
            };
        };
    };
    phrases_update: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description A unique integer value identifying this phrase. */
                id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Phrase"];
                "application/x-www-form-urlencoded": components["schemas"]["Phrase"];
                "multipart/form-data": components["schemas"]["Phrase"];
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Phrase"];
                };
            };
        };
    };
    phrases_destroy: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description A unique integer value identifying this phrase. */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description No response body */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    phrases_partial_update: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description A unique integer value identifying this phrase. */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": components["schemas"]["PatchedPhrase"];
                "application/x-www-form-urlencoded": components["schemas"]["PatchedPhrase"];
                "multipart/form-data": components["schemas"]["PatchedPhrase"];
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Phrase"];
                };
            };
        };
    };
    surahs_list: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Surah"][];
                };
            };
        };
    };
    surahs_create: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Surah"];
                "application/x-www-form-urlencoded": components["schemas"]["Surah"];
                "multipart/form-data": components["schemas"]["Surah"];
            };
        };
        responses: {
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Surah"];
                };
            };
        };
    };
    surahs_retrieve: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description A unique integer value identifying this surah. */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["SurahDetail"];
                };
            };
        };
    };
    surahs_update: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description A unique integer value identifying this surah. */
                id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Surah"];
                "application/x-www-form-urlencoded": components["schemas"]["Surah"];
                "multipart/form-data": components["schemas"]["Surah"];
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Surah"];
                };
            };
        };
    };
    surahs_destroy: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description A unique integer value identifying this surah. */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description No response body */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    surahs_partial_update: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description A unique integer value identifying this surah. */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": components["schemas"]["PatchedSurah"];
                "application/x-www-form-urlencoded": components["schemas"]["PatchedSurah"];
                "multipart/form-data": components["schemas"]["PatchedSurah"];
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Surah"];
                };
            };
        };
    };
    translations_list: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Translation"][];
                };
            };
        };
    };
    translations_create: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Translation"];
                "application/x-www-form-urlencoded": components["schemas"]["Translation"];
                "multipart/form-data": components["schemas"]["Translation"];
            };
        };
        responses: {
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Translation"];
                };
            };
        };
    };
    translations_retrieve: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description A unique integer value identifying this translation. */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Translation"];
                };
            };
        };
    };
    translations_update: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description A unique integer value identifying this translation. */
                id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Translation"];
                "application/x-www-form-urlencoded": components["schemas"]["Translation"];
                "multipart/form-data": components["schemas"]["Translation"];
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Translation"];
                };
            };
        };
    };
    translations_destroy: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description A unique integer value identifying this translation. */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description No response body */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    translations_partial_update: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description A unique integer value identifying this translation. */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": components["schemas"]["PatchedTranslation"];
                "application/x-www-form-urlencoded": components["schemas"]["PatchedTranslation"];
                "multipart/form-data": components["schemas"]["PatchedTranslation"];
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Translation"];
                };
            };
        };
    };
    users_list: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["User"][];
                };
            };
        };
    };
    users_create: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["User"];
                "application/x-www-form-urlencoded": components["schemas"]["User"];
                "multipart/form-data": components["schemas"]["User"];
            };
        };
        responses: {
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["User"];
                };
            };
        };
    };
    users_retrieve: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description A unique integer value identifying this user. */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["User"];
                };
            };
        };
    };
    users_update: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description A unique integer value identifying this user. */
                id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["User"];
                "application/x-www-form-urlencoded": components["schemas"]["User"];
                "multipart/form-data": components["schemas"]["User"];
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["User"];
                };
            };
        };
    };
    users_destroy: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description A unique integer value identifying this user. */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description No response body */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    users_partial_update: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description A unique integer value identifying this user. */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": components["schemas"]["PatchedUser"];
                "application/x-www-form-urlencoded": components["schemas"]["PatchedUser"];
                "multipart/form-data": components["schemas"]["PatchedUser"];
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["User"];
                };
            };
        };
    };
    words_list: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Word"][];
                };
            };
        };
    };
    words_create: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Word"];
                "application/x-www-form-urlencoded": components["schemas"]["Word"];
                "multipart/form-data": components["schemas"]["Word"];
            };
        };
        responses: {
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Word"];
                };
            };
        };
    };
    words_retrieve: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description A unique integer value identifying this word. */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Word"];
                };
            };
        };
    };
    words_update: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description A unique integer value identifying this word. */
                id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Word"];
                "application/x-www-form-urlencoded": components["schemas"]["Word"];
                "multipart/form-data": components["schemas"]["Word"];
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Word"];
                };
            };
        };
    };
    words_destroy: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description A unique integer value identifying this word. */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description No response body */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    words_partial_update: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description A unique integer value identifying this word. */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": components["schemas"]["PatchedWord"];
                "application/x-www-form-urlencoded": components["schemas"]["PatchedWord"];
                "multipart/form-data": components["schemas"]["PatchedWord"];
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Word"];
                };
            };
        };
    };
}
